@page "/Sections"
@model A.C.E.S.Pages.Sections.SectionsModel
@{
    ViewData["Title"] = "Sections";
    ViewData["Header"] = "Sections";
}

<section id="top-bar">
    <div>
        <input id="filter-section-name" type="text" placeholder="Search Section" onkeyup="LoadList()" />
        <select id="filter-section-status" onchange="LoadList()">
            <option>Active</option>
            <option>Archived</option>
        </select>
    </div>
    <div>
        <a asp-page="Add" class="button">+ Add Section</a>
    </div>
</section>
<section>
    <table class="table">
        <colgroup>
            <col />
            <col />
            <col style="width:200px;" />
            <col style="width:120px;" />
        </colgroup>
        <thead>
            <tr>
                <td>Name</td>
                <td>Course</td>
                <td>Semester</td>
                <td></td>
            </tr>
        </thead>
        <tbody id="section-list">
        </tbody>
    </table>
</section>
<section id="course-list">
</section>
<aside id="add-course" class="pop-up">
    <h2>Add Section</h2>
    <form action="/Sections/Add">
        <div><label for="name">Name:</label></div>
        <div><input id="name" name="name" type="text" /></div>
        <div><label>Term</label></div>
        <div>
            <select>
                <option>Spring</option>
                <option>Summer</option>
                <option>Fall</option>
            </select>
            <select>
                <option>Full</option>
                <option>1<sup>st</sup> Block</option>
                <option>2<sup>nd</sup> Block</option>
            </select>
            <select>
                @for (int i = 0; i < 3; i++)
                {
                    <option>@(DateTime.Now.Year + i)</option>
                }
            </select>
        </div>
        <p>
            <input type="submit" value="Add" />
            <input type="button" value="Cancel" onclick="$('#add-course').animate({ width: 'toggle' });" />
        </p>
    </form>
</aside>
<aside id="add-student" class="pop-up"></aside>
<script>
    sections = JSON.parse('@Json.Serialize(Model.Sections)');
    LoadList();

    function LoadList() {
        var count = 0;

        var name = document.getElementById('filter-section-name').value;
        var status = document.getElementById('filter-section-status').value;

        var elem = document.getElementById('section-list');
        elem.innerHTML = "";

        for (var i = 0; i < sections.length; i++) {
            // Filter the results based on user input
            if (sections[i].archived && status == "Active") continue;
            if (!sections[i].archived && status == "Archived") continue;
            if (!sections[i].name.toLowerCase().includes(name.toLowerCase())) continue;

            // There exists a result after filter
            count++;

            var tr = document.createElement("tr");
            tr.innerHTML += `<td><a href="/Sections/${sections[i].id}">${sections[i].name}</a></td>`;
            tr.innerHTML += `<td>${sections[i].course.name}</td>`;
            tr.innerHTML += `<td>${sections[i].semester} ${sections[i].year}</td>`;

            var td = document.createElement("td");
            td.classList.add("table-button");
            td.innerHTML += `<a title="Edit" href="/Sections/${sections[i].id}/Edit"><i class="fas fa-fw fa-lg fa-pencil-alt"></i></a>`;
            // Display either an option for archiving or restoring according to the filter
            if (status == "Active")
                td.innerHTML += `<a title="Archive" onclick="ArchiveSection(${i}, true)"><i class="fas fa-fw fa-lg fa-trash"></i></button>`;
            else
                td.innerHTML += `<a title="Restore" onclick="ArchiveSection(${i}, false)"><i class="fas fa-fw fa-lg fa-trash-restore"></i></a>`;
            tr.appendChild(td);
            elem.appendChild(tr);

        }
        // If there are no results after filter
        if (count == 0) {
            elem.innerHTML += '<tr><td colspan="4"><center>No Result.</center></td></tr>';
        }
    }

    function DisplayError(request, status, error) {
        console.log({ request, status, error });
    }

    function ArchiveSection(i, archive) {
        // Set archive status in JavaScript for immediate feedback
        sections[i].archived = archive;
        // Update database
        $.ajax({
            type: 'get',
            url: '/Sections',
            data: {
                handler: 'Archive',
                id: sections[i].id,
                archive: archive
            },
            contenttype: "application/json",
            datatype: "json"
        }).done(LoadList).fail(DisplayError);
    }
</script>