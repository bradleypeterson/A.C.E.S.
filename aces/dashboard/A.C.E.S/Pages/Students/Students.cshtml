@page "/Students"
@model A.C.E.S.Pages.Students.StudentsModel
@{
    ViewData["Title"] = "Students";
    ViewData["Header"] = "Students";
}

<section id="top-bar">
    <div>
        <input id="filter-student-name" type="text" placeholder="Search Student" onkeyup="LoadList()" />
        <select id="filter-student-standing" onchange="LoadList()">
            <option>All Standing</option>
            <option>Good Standing</option>
            <option>Moderate Standing</option>
            <option>Bad Standing</option>
        </select>
        <select id="filter-student-status" onchange="LoadList()">
            <option>Active</option>
            <option>Archived</option>
        </select>
    </div>
    <div>
        <a asp-page="Add" class="button">+ Add Student</a>
    </div>
</section>
<section>
    <table class="table">
        <colgroup>
            <col />
            <col style="width:45%;" />
            <col style="width:130px;" />
            <col style="width:120px;" />
        </colgroup>
        <thead>
            <tr>
                <td>Name</td>
                <td>Email</td>
                <td>Standing</td>
                <td></td>
            </tr>
        </thead>
        <tbody id="student-list">
        </tbody>
    </table>
</section>
<aside class="pop-up">
    <h2>Add Student</h2>
    <form action="/Students/Add" method="post">
        <div><label asp-for="Student.FullName">Name:</label></div>
        <div><input asp-for="Student.FullName" type="text" /></div>
        <div><label asp-for="Student.Email">Email:</label></div>
        <div><input asp-for="Student.Email" type="email" /></div>
        <p>
            <input type="submit" value="Add" />
            <input type="button" value="Cancel" onclick="$('.pop-up').animate({ width: 'toggle' });" />
        </p>
    </form>
</aside>
<script>
    students = JSON.parse('@Json.Serialize(Model.students)');
    LoadList();

    function LoadList() {
        var count = 0;

        var name = document.getElementById('filter-student-name').value;
        var standing = document.getElementById('filter-student-standing').selectedIndex;
        var status = document.getElementById('filter-student-status').value;

        var elem = document.getElementById('student-list');
        elem.innerHTML = "";

        for (var i = 0; i < students.length; i++){
            // Filter the results based on user input
            if (students[i].archived && status == "Active") continue;
            if (!students[i].archived && status == "Archived") continue;
            if (!students[i].name.toLowerCase().includes(name.toLowerCase())) continue;
            if (standing != 0 && students[i].standing != standing - 1) continue;

            // There exists a result after filter
            count++;

            var tr = document.createElement("tr");
            tr.innerHTML += `<td><a href="/Students/${students[i].id}">${students[i].name}</a></td>`;
            tr.innerHTML += `<td>${students[i].email}</td>`;
            // Display different numbers of stars based on the students academic standing.
            switch (students[i].standing) {
                case 0:
                    tr.innerHTML += '<td><i class="green-text fas fa-star"></i><i class="green-text fas fa-star"></i><i class="green-text fas fa-star"></i> Good</td>';
                    break;
                case 1:
                    tr.innerHTML += '<td><i class="orange-text fas fa-star"></i><i class="orange-text fas fa-star"></i><i class="far fa-star"></i> Moderate</td>';
                    break;
                case 2:
                    tr.innerHTML += '<td><i class="red-text fas fa-star"></i><i class="far fa-star"></i><i class="far fa-star"></i> Bad</td>';
                    break;
                default:
                    tr.innerHTML += '<td><i class="far fa-star"></i><i class="far fa-star"></i><i class="far fa-star"></i> N/A</td>';
                    break;
            }

            var td = document.createElement("td");
            td.classList.add("table-button");
            td.innerHTML += `<a title="Edit" href="/Students/${students[i].id}/Edit"><i class="fas fa-fw fa-lg fa-pencil-alt"></i></a>`;
            // Display either an option for archiving or restoring according to the filter
            if (status == "Active")
                td.innerHTML += `<a title="Archive" onclick="ArchiveStudent(${i}, true)"><i class="fas fa-fw fa-lg fa-trash"></i></a>`;
            else
                td.innerHTML += `<a title="Restore" onclick="ArchiveStudent(${i}, false)"><i class="fas fa-fw fa-lg fa-trash-restore"></i></a>`;
            tr.appendChild(td);
            elem.appendChild(tr);
        }
        // If there are no results after filter
        if (count == 0) {
            elem.innerHTML += '<tr><td colspan="4"><center>No Result.</center></td></tr>';
        }
    }

    function DisplayError(request, status, error) {
        console.log({ request, status, error });
    }

    function ArchiveStudent(i, archive) {
        // Set archive status in JavaScript for immediate feedback
        students[i].archived = archive;
        // Update database
        $.ajax({
            type: 'get',
            url: '/Students',
            data: {
                handler: 'Archive',
                id: students[i].id,
                archive: archive
            },
            contenttype: "application/json",
            datatype: "json"
        }).done(LoadList).fail(DisplayError);
    }
</script>