@page "/Courses/{ID:int}"
@model A.C.E.S.Pages.Courses.CourseModel
@{
    ViewData["title"] = Model.Course.CourseName;
    ViewData["Header"] = $"{Model.Course.CourseName}";
}

    <section id="top-bar">
        <div>
            <input id="filter-assignment-name" type="text" placeholder="Search assignment" onkeyup="LoadList()" />
            <select id="filter-assignment-status" onchange="LoadList()">
                <option>Active</option>
                <option>Archived</option>
            </select>
        </div>
        <div>
            <a href="/Courses/@Model.Course.Id/Assignments/Add" class="button">+ Add Assignment</a>
        </div>
    </section>
<section>
    <table class="table">
        <colgroup>
            <col />
            <col style="width:130px;" />
        </colgroup>
        <thead>
            <tr>
                <td>Assignments</td>
                <td></td>
            </tr>
        </thead>
        <tbody id="student-list">
        </tbody>
    </table>
</section>
<script>
    course = JSON.parse('@Json.Serialize(Model.Course)');
    assignments = JSON.parse('@Json.Serialize(Model.Assignments)');
    LoadList();

    function LoadList() {
        var count = 0;

        var name = document.getElementById('filter-assignment-name').value;
        var status = document.getElementById('filter-assignment-status').value;

        var elem = document.getElementById('student-list');
        elem.innerHTML = "";

        for (var i in assignments) {
            // Filter the results based on user input
            if (status == 'Active' && assignments[i].archived) continue;
            if (status == 'Archived' && !assignments[i].archived) continue;
            if (!assignments[i].name.toLowerCase().includes(name.toLowerCase())) continue;

            // There exists a result after filter
            count++;

            var tr = document.createElement("tr");
            tr.innerHTML += `<td><a href="/Assignments/${assignments[i].id}">${assignments[i].name}</a></td>`;

            var td = document.createElement("td");
            td.classList.add("table-button");
            td.innerHTML += `<a title="Edit" href="/Assignments/${assignments[i].id}/Edit"><i class="fas fa-fw fa-lg fa-pencil-alt"></i></a>`;
            // Display either an option for archiving or restoring according to the filter
            if (status == "Active")
                td.innerHTML += `<a title="Archive" onclick="ArchiveAssignment(${i}, true)"><i class="fas fa-fw fa-lg fa-trash"></i></a>`;
            else
                td.innerHTML += `<a title="Restore" onclick="ArchiveAssignment(${i}, false)"><i class="fas fa-fw fa-lg fa-trash-restore"></i></a>`;
            tr.appendChild(td);
            elem.appendChild(tr);
        }
        // If there are no results after filter
        if (count == 0) {
            elem.innerHTML += '<tr><td colspan="4"><center>No Result.</center></td></tr>';
        }
    }

    function DisplayError(request, status, error) {
        console.log({ request, status, error });
    }

    function ArchiveAssignment(i, archive) {
        // Set archive status in JavaScript for immediate feedback
        assignments[i].archived = archive;
        // Update database
        $.ajax({
            type: 'get',
            url: `/Assignments/${assignments[i].id}`,
            data: {
                handler: 'Archive',
                archive: archive
            },
            contenttype: "application/json",
            datatype: "json"
        }).done(LoadList).fail(DisplayError);
    }
</script>